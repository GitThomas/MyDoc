{"version":3,"sources":["AddressForm.js","PaymentForm.js","Review.js","App.js","serviceWorker.js","index.js"],"names":["fetch","then","response","json","myJson","console","log","results","find","person","name","AddressForm","react_default","a","createElement","Fragment","Typography_default","variant","gutterBottom","Grid_default","container","spacing","item","xs","sm","TextField_default","required","id","label","fullWidth","autoComplete","FormControlLabel_default","control","Checkbox_default","color","value","PaymentForm","md","helperText","products","desc","price","addresses","payments","detail","withStyles","theme","listItem","padding","concat","unit","total","fontWeight","title","marginTop","props","classes","List_default","disablePadding","map","product","ListItem_default","className","key","ListItemText_default","primary","secondary","join","direction","payment","steps","Checkout","state","activeStep","handleNext","_this","setState","handleBack","handleReset","this","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","noWrap","layout","Paper_default","paper","component","align","Stepper_default","stepper","Step_default","StepLabel_default","length","step","src_AddressForm","src_PaymentForm","src_Review","Error","getStepContent","buttons","Button_default","onClick","button","React","Component","Object","defineProperty","width","marginLeft","marginRight","breakpoints","up","marginBottom","display","justifyContent","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.973d4f87.chunk.js","sourcesContent":["import React from \"react\"; //JSX and React Componen\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n// import { object } from \"prop-types\";\n\n/*onst UserAddress = {\n  firstName: \"\",\n  lastName: \"\",\n  address1: \"\",\n  address2: \"\",\n  city: \"\",\n  state: \"\",\n  zip: \"\",\n  country: \"\"\n};*/\n\nfetch(\"https://swapi.co/api/people/\")\n  .then(function(response) {\n    return response.json();\n  })\n  .then(function(myJson) {\n    console.log(myJson.results.find(person => person.name === \"R2-D2\"));\n  });\n\n/*function handleChange(e) {\n  UserAddress[e.target.id] = e.target.value;\n  console.log(UserAddress);\n  fetch('localhost:3000', {})\n    .then(() )\n}\n*/\n\nfunction AddressForm() {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Shipping address\n      </Typography>\n      <Grid container spacing={24}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"firstName\"\n            name=\"firstName\"\n            label=\"First name\"\n            fullWidth\n            autoComplete=\"fname\"\n            //onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"lastName\"\n            name=\"lastName\"\n            label=\"Last name\"\n            fullWidth\n            autoComplete=\"lname\"\n            //onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"address1\"\n            name=\"address1\"\n            label=\"Address line 1\"\n            fullWidth\n            autoComplete=\"billing address-line1\"\n            // onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id=\"address2\"\n            name=\"address2\"\n            label=\"Address line 2\"\n            fullWidth\n            autoComplete=\"billing address-line2\"\n            // onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"city\"\n            name=\"city\"\n            label=\"City\"\n            fullWidth\n            autoComplete=\"billing address-level2\"\n            // onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id=\"state\"\n            name=\"state\"\n            label=\"State/Province/Region\"\n            fullWidth\n            // onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"zip\"\n            name=\"zip\"\n            label=\"Zip / Postal code\"\n            fullWidth\n            autoComplete=\"billing postal-code\"\n            // onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"country\"\n            name=\"country\"\n            label=\"Country\"\n            fullWidth\n            autoComplete=\"billing country\"\n            // onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={\n              <Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />\n            }\n            label=\"Use this address for payment details\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default AddressForm;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nfunction PaymentForm() {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Payment method\n      </Typography>\n      <Grid container spacing={24}>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"cardName\" label=\"Name on card\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"cardNumber\" label=\"Card number\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"expDate\" label=\"Expiry date\" fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            id=\"cvv\"\n            label=\"CVV\"\n            helperText=\"Last three digits on signature strip\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\n            label=\"Remember credit card details for next time\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default PaymentForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst products = [\n  { name: \"Product 1\", desc: \"A nice thing\", price: \"$9.99\" },\n  { name: \"Product 2\", desc: \"Another thing\", price: \"$3.45\" },\n  { name: \"Product 3\", desc: \"Something else\", price: \"$6.51\" },\n  { name: \"Product 4\", desc: \"Best thing of all\", price: \"$14.11\" },\n  { name: \"Shipping\", desc: \"\", price: \"Free\" }\n];\nconst addresses = [\n  \"1 Material-UI Drive\",\n  \"Reactville\",\n  \"Anytown\",\n  \"99999\",\n  \"USA\"\n];\nconst payments = [\n  { name: \"Card type\", detail: \"Visa\" },\n  { name: \"Card holder\", detail: \"Mr John Smith\" },\n  { name: \"Card number\", detail: \"xxxx-xxxx-xxxx-1234\" },\n  { name: \"Expiry date\", detail: \"04/2024\" }\n];\n\nconst styles = theme => ({\n  listItem: {\n    padding: `${theme.spacing.unit}px 0`\n  },\n  total: {\n    fontWeight: \"700\"\n  },\n  title: {\n    marginTop: theme.spacing.unit * 2\n  }\n});\n\nfunction Review(props) {\n  const { classes } = props;\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      <List disablePadding>\n        {products.map(product => (\n          <ListItem className={classes.listItem} key={product.name}>\n            <ListItemText primary={product.name} secondary={product.desc} />\n            <Typography variant=\"body2\">{product.price}</Typography>\n          </ListItem>\n        ))}\n        <ListItem className={classes.listItem}>\n          <ListItemText primary=\"Total\" />\n          <Typography variant=\"subtitle1\" className={classes.total}>\n            $34.06\n          </Typography>\n        </ListItem>\n      </List>\n      <Grid container spacing={16}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Shipping\n          </Typography>\n          <Typography gutterBottom>John Smith</Typography>\n          <Typography gutterBottom>{addresses.join(\", \")}</Typography>\n        </Grid>\n        <Grid item container direction=\"column\" xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\n            Payment details\n          </Typography>\n          <Grid container>\n            {payments.map(payment => (\n              <React.Fragment key={payment.name}>\n                <Grid item xs={6}>\n                  <Typography gutterBottom>{payment.name}</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography gutterBottom>{payment.detail}</Typography>\n                </Grid>\n              </React.Fragment>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nReview.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Review);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\n\nconst styles = theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3\n    }\n  },\n  stepper: {\n    padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  button: {\n    marginTop: theme.spacing.unit * 3,\n    marginLeft: theme.spacing.unit\n  }\n});\n\nconst steps = [\"Shipping address\", \"Payment details\", \"Review your order\"];\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <AddressForm />;\n    case 1:\n      return <PaymentForm />;\n    case 2:\n      return <Review />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nclass Checkout extends React.Component {\n  state = {\n    activeStep: 0\n  };\n\n  handleNext = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep + 1\n    }));\n  };\n\n  handleBack = () => {\n    this.setState(state => ({\n      activeStep: state.activeStep - 1\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      activeStep: 0\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { activeStep } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Company name\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <main className={classes.layout}>\n          <Paper className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n              Checkout\n            </Typography>\n            <Stepper activeStep={activeStep} className={classes.stepper}>\n              {steps.map(label => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            <React.Fragment>\n              {activeStep === steps.length ? (\n                <React.Fragment>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Thank you for your order.\n                  </Typography>\n                  <Typography variant=\"subtitle1\">\n                    Your order number is #2001539. We have emailed your order\n                    confirmation, and will send you an update when your order\n                    has shipped.\n                  </Typography>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  {getStepContent(activeStep)}\n                  <div className={classes.buttons}>\n                    {activeStep !== 0 && (\n                      <Button\n                        onClick={this.handleBack}\n                        className={classes.button}\n                      >\n                        Back\n                      </Button>\n                    )}\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={this.handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? \"Place order\" : \"Next\"}\n                    </Button>\n                  </div>\n                </React.Fragment>\n              )}\n            </React.Fragment>\n          </Paper>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Checkout);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}